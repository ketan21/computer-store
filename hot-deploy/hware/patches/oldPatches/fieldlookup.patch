Index: framework/common/webcommon/WEB-INF/actions/includes/FindAutocompleteOptions.groovy
===================================================================
--- framework/common/webcommon/WEB-INF/actions/includes/FindAutocompleteOptions.groovy	(revision 1068853)
+++ framework/common/webcommon/WEB-INF/actions/includes/FindAutocompleteOptions.groovy	(working copy)
@@ -18,6 +18,7 @@
  */
 
 import org.ofbiz.base.util.StringUtil;
+import org.ofbiz.base.util.Debug;
 import org.ofbiz.entity.util.EntityFindOptions;
 import org.ofbiz.entity.condition.EntityCondition;
 import org.ofbiz.entity.condition.EntityConditionList;
@@ -26,19 +27,33 @@
 import org.ofbiz.entity.condition.EntityFunction;
 import org.ofbiz.entity.condition.EntityOperator;
 
-andExprs = [];
-entityName = context.entityName;
-searchFields = context.searchFields;
-displayFields = context.displayFields ?: searchFields;
-searchValueFieldName = parameters.searchValueField;
-if (searchValueFieldName) fieldValue = parameters.get(searchValueFieldName);
-searchType = context.searchType;
+def mainAndConds = [];
+def orExprs = [];
+def entityName = context.entityName;
+def searchFields = context.searchFields;
+def displayFields = context.displayFields ?: searchFields;
 
+def searchValueFieldName = parameters.term;
+def fieldValue = null;
+if (searchValueFieldName) {
+    fieldValue = searchValueFieldName; 
+} else if (parameters.searchValueFieldName) { // This is to find the description of a lookup value on initialization.
+    fieldValue = parameters.get(parameters.searchValueFieldName);
+    context.description = "true";
+}
+
+def searchType = context.searchType;
+def displayFieldsSet = null;
+
 if (searchFields && fieldValue) {
-    searchFieldsList = StringUtil.toList(searchFields);
+    def searchFieldsList = StringUtil.toList(searchFields);
     displayFieldsSet = StringUtil.toSet(displayFields);
-    returnField = searchFieldsList[0]; //default to first element of searchFields
-    displayFieldsSet.add(returnField); //add it to select fields, in case it is missing
+    if (context.description && fieldValue instanceof java.lang.String) {
+        returnField = parameters.searchValueFieldName;
+    } else {
+        returnField = searchFieldsList[0]; //default to first element of searchFields
+        displayFieldsSet.add(returnField); //add it to select fields, in case it is missing
+    }
     context.returnField = returnField;
     context.displayFieldsSet = displayFieldsSet;
     if ("STARTS_WITH".equals(searchType)) {
@@ -50,21 +65,35 @@
     }
     searchFieldsList.each { fieldName ->
         if ("EQUALS".equals(searchType)) {
-            andExprs.add(EntityCondition.makeCondition(EntityFieldValue.makeFieldValue(returnField), EntityOperator.EQUALS, searchValue));    
+            orExprs.add(EntityCondition.makeCondition(EntityFieldValue.makeFieldValue(searchFieldsList[0]), EntityOperator.EQUALS, searchValue));    
             return;//in case of EQUALS, we search only a match for the returned field
         } else {
-            andExprs.add(EntityCondition.makeCondition(EntityFunction.UPPER(EntityFieldValue.makeFieldValue(fieldName)), EntityOperator.LIKE, searchValue));
+            orExprs.add(EntityCondition.makeCondition(EntityFunction.UPPER(EntityFieldValue.makeFieldValue(fieldName)), EntityOperator.LIKE, searchValue));
         }        
     }
 }
 
-if (andExprs && entityName && displayFieldsSet) {
-    entityConditionList = EntityCondition.makeCondition(andExprs, EntityOperator.OR);
+/* the following is part of an attempt to handle additional parameters that are passed in from other form fields at run-time,
+ * but that is not supported by the scrip.aculo.us Ajax.Autocompleter, but this is still useful to pass parameters from the
+ * lookup screen definition:
+ */
+def conditionFields = context.conditionFields;
+if (conditionFields) {
+    // these fields are for additonal conditions, this is a Map of name/value pairs
+    for (conditionFieldEntry in conditionFields.entrySet()) {
+        mainAndConds.add(EntityCondition.makeCondition(EntityFieldValue.makeFieldValue(conditionFieldEntry.getKey()), EntityOperator.EQUALS, conditionFieldEntry.getValue()));    
+    }
+}
 
-    //if there is an extra condition, add it to main condition
-    if (context.andCondition && context.andCondition  instanceof EntityCondition) {
-        entityConditionList = EntityCondition.makeCondition(context.andCondition, entityConditionList);
+if (orExprs && entityName && displayFieldsSet) {
+    mainAndConds.add(EntityCondition.makeCondition(orExprs, EntityOperator.OR));
+
+    //if there is an extra condition, add it to main condition list
+    if (context.andCondition && context.andCondition instanceof EntityCondition) {
+        mainAndConds.add(context.andCondition);
     }
+    
+    def entityConditionList = EntityCondition.makeCondition(mainAndConds, EntityOperator.AND);
 
     Integer autocompleterViewSize = Integer.valueOf(context.autocompleterViewSize ?: 10);
     EntityFindOptions findOptions = new EntityFindOptions();
Index: framework/common/webcommon/includes/ajaxAutocompleteOptions.ftl
===================================================================
--- framework/common/webcommon/includes/ajaxAutocompleteOptions.ftl	(revision 1068853)
+++ framework/common/webcommon/includes/ajaxAutocompleteOptions.ftl	(working copy)
@@ -16,28 +16,49 @@
 specific language governing permissions and limitations
 under the License.
 -->
-
-<ul>
+<#if description?exists>
     <#if autocompleteOptions?exists>
-        <#assign displayReturnField = Static["org.ofbiz.base.util.UtilProperties"].getPropertyValue("widget.properties", "widget.autocompleter.displayReturnField")>
         <#list autocompleteOptions as autocompleteOption>
             <#assign displayString = ""/>
-            <#assign returnField = ""/>
-            <#-- <#list autocompleteOption.keySet() as key> instead use the field order of display fields -->
-                <#list context.displayFieldsSet as key>
+            <#list displayFieldsSet as key>
                 <#assign field = autocompleteOption.get(key)?if_exists>
                 <#if field?has_content>
-                    <#if (key == context.returnField)>
-                        <#assign returnField = field/>
-                    <#else>
+                    <#if (key != context.returnField)>
                         <#assign displayString = displayString + field + " ">
                     </#if>
                 </#if>
             </#list>
+            <#if (displayString?trim?has_content )>${displayString?trim}</#if>
+        </#list>
+    </#if>
+<#else>
+<script type="text/javascript">
+    <#if autocompleteOptions?exists>
+  var autocomp = [
+        <#assign displayReturnField = Static["org.ofbiz.base.util.UtilProperties"].getPropertyValue("widget.properties", "widget.autocompleter.displayReturnField")>
+        <#list autocompleteOptions as autocompleteOption>
+            {
+            <#assign displayString = ""/>
+            <#assign returnField = ""/>
+            <#list displayFieldsSet as key>
+              <#assign field = autocompleteOption.get(key)?if_exists>
+              <#if field?has_content>
+                  <#if (key == context.returnField)>
+                      <#assign returnField = field/>
+                  <#else>
+                      <#assign displayString = displayString + field + " ">
+                  </#if>
+              </#if>
+            </#list>
             <#if ("Y" == displayReturnField)>
                 <#assign displayString = displayString +  "[" + returnField + "]">
-            </#if>            
-            <li id="${returnField}"><#if (displayString?trim?has_content )>${displayString?trim}<#else>${returnField}</#if></li>
+            </#if>
+            "id": " ${returnField}",
+            "label": "<#if (displayString?trim?has_content )>${displayString?trim}<#else>${returnField}</#if>",
+            "value": "${returnField}"
+            }<#if autocompleteOption_has_next>,</#if>
         </#list>
+  ];
     </#if>
-</ul>
+</script>
+</#if>
Index: framework/widget/src/org/ofbiz/widget/form/MacroFormRenderer.java
===================================================================
--- framework/widget/src/org/ofbiz/widget/form/MacroFormRenderer.java	(revision 1068853)
+++ framework/widget/src/org/ofbiz/widget/form/MacroFormRenderer.java	(working copy)
@@ -1952,14 +1952,14 @@
             } else {
                 autoCompleterTarget = lookupFieldFormName + "&amp;amp;";
             }
-            autoCompleterTarget = autoCompleterTarget + "ajaxLookup=Y&amp;amp;searchValueField=" + lookupField.getModelFormField().getParameterName(context);
+            autoCompleterTarget = autoCompleterTarget + "ajaxLookup=Y";
             updateAreas = FastList.newInstance();
             updateAreas.add(new ModelForm.UpdateArea("change", id, autoCompleterTarget));
         }
 
         boolean ajaxEnabled = updateAreas != null && this.javaScriptEnabled;
         String autocomplete = "";
-        if (!lookupField.getClientAutocompleteField() || ajaxEnabled) {
+        if (!lookupField.getClientAutocompleteField() || !ajaxEnabled) {
             autocomplete = "off";
         }
 
@@ -2016,7 +2016,8 @@
         if (UtilValidate.isEmpty(fadeBackground)){
             fadeBackground = "false";
         }
-        
+        Boolean isInitiallyCollapsed = lookupField.getInitiallyCollapsed();
+                        
         String clearText = "";
         Map<String, Object> uiLabelMap = UtilGenerics.checkMap(context.get("uiLabelMap"));        
         if (uiLabelMap != null) {
@@ -2084,6 +2085,8 @@
         sr.append(clearText);
         sr.append("\" showDescription=\"");
         sr.append(Boolean.toString(showDescription));
+        sr.append("\" initiallyCollapsed=\"");
+        sr.append(Boolean.toString(isInitiallyCollapsed));
         sr.append("\" />");
         executeMacro(writer, sr.toString());
 
@@ -2104,7 +2107,7 @@
         }
         return result;
     }
-
+    
     public void renderNextPrev(Appendable writer, Map<String, Object> context, ModelForm modelForm) throws IOException {
         boolean ajaxEnabled = false;
         List<ModelForm.UpdateArea> updateAreas = modelForm.getOnPaginateUpdateAreas();
Index: framework/widget/src/org/ofbiz/widget/form/ModelFormField.java
===================================================================
--- framework/widget/src/org/ofbiz/widget/form/ModelFormField.java	(revision 1068853)
+++ framework/widget/src/org/ofbiz/widget/form/ModelFormField.java	(working copy)
@@ -3559,6 +3559,7 @@
         protected String lookupHeight;
         protected String lookupPosition;
         protected String fadeBackground;
+        protected String initiallyCollapsed;
 
         public LookupField(Element element, ModelFormField modelFormField) {
             super(element, modelFormField);
@@ -3570,6 +3571,7 @@
             this.lookupWidth = element.getAttribute("width");
             this.lookupPosition = element.getAttribute("position");
             this.fadeBackground = element.getAttribute("fade-background");
+            this.initiallyCollapsed = element.getAttribute("initially-collapsed");
 
             Element subHyperlinkElement = UtilXml.firstChildElement(element, "sub-hyperlink");
             if (subHyperlinkElement != null) {
@@ -3657,6 +3659,10 @@
         public void setFadeBackground(String str) {
             this.fadeBackground = str;
         }
+        //initially-collapsed status
+        public boolean getInitiallyCollapsed() {
+            return "true".equals(this.initiallyCollapsed);
+        }
     }
 
     public static class FileField extends TextField {
Index: framework/widget/templates/htmlFormMacroLibrary.ftl
===================================================================
--- framework/widget/templates/htmlFormMacroLibrary.ftl	(revision 1141022)
+++ framework/widget/templates/htmlFormMacroLibrary.ftl	(working copy)
@@ -170,10 +170,10 @@
 </#if>
 </#macro>
 
-<#macro renderCheckField items className alert allChecked currentValue name event action>
+<#macro renderCheckField items className alert allChecked name event action>
 <#list items as item>
 <input type="checkbox" <@renderClass className alert /><#rt/>
-<#if allChecked?has_content && allChecked> checked="checked" <#elseif allChecked?has_content && !allChecked><#elseif currentValue?has_content && currentValue==item.value> checked="checked"</#if> name="${name?default("")?html}" value="${item.value?default("")?html}"<#if event?has_content> ${event}="${action}"</#if>/><#rt/>
+<#if allChecked?has_content && allChecked> checked="checked" <#elseif allChecked?has_content && !allChecked><#elseif item.checked?has_content && item.checked> checked="checked"</#if> name="${name?default("")?html}" value="${item.value?default("")?html}"<#if event?has_content> ${event}="${action}"</#if>/><#rt/>
 ${item.description?default("")}
 </#list>
 </#macro>
@@ -431,32 +431,73 @@
 </#if>
 </#macro>
 
-<#macro renderLookupField className alert name value size maxlength id event action readonly autocomplete descriptionFieldName formName fieldFormName targetParameterIter imgSrc ajaxUrl ajaxEnabled presentation width height position fadeBackground clearText showDescription>
+<#macro renderLookupField className alert name value size maxlength id event action readonly autocomplete descriptionFieldName formName fieldFormName targetParameterIter imgSrc ajaxUrl ajaxEnabled presentation width height position fadeBackground clearText showDescription initiallyCollapsed>
+<script type="text/javascript">
+jQuery(document).ready(function(){
+    if (!jQuery('form[name="${formName}"]').length) {
+        alert("Developer: for lookups to work you must provide a form name!")
+    }
+});
+</script>
 <span class="field-lookup">
 <#if size?has_content && size=="0"><input type="hidden" <#if name?has_content> name="${name}"/></#if><#else><input type="text" <@renderClass className alert /><#if name?has_content> name="${name}"</#if><#if value?has_content> value="${value}"</#if><#if size?has_content> size="${size}"</#if><#if maxlength?has_content> maxlength="${maxlength}"</#if><#if id?has_content> id="${id}"</#if><#rt/><#if readonly?has_content && readonly> readonly="readonly"</#if><#rt/><#if event?has_content && action?has_content> ${event}="${action}"</#if><#rt/><#if autocomplete?has_content> autocomplete="off"</#if>/><#rt/></#if>
 <#if presentation?has_content && descriptionFieldName?has_content && presentation == "window">
- <a href="javascript:call_fieldlookup3(document.${formName?html}.${name?html},document.${formName?html}.${descriptionFieldName},'${fieldFormName}'<#rt/>
+ <a href="javascript:call_fieldlookup3(document.${formName?html}.${name?html},document.${formName?html}.${descriptionFieldName},'${fieldFormName}', '${presentation}'<#rt/>
+    <#if targetParameterIter?has_content>
+     <#list targetParameterIter as item>
+    ,document.${formName}.${item}.value<#rt>
+     </#list>
+    </#if>
+    );"></a><#rt>
 <#elseif presentation?has_content && presentation == "window">
- <a href="javascript:call_fieldlookup2(document.${formName}.${name},'${fieldFormName}'<#rt/>
-<#elseif descriptionFieldName?has_content>
- <a href="javascript:call_fieldlookupLayer3(document.${formName?html}.${name?html},document.${formName?html}.${descriptionFieldName},'${fieldFormName}','${width}','${height}','${position}','${fadeBackground}'<#rt/>
+ <a href="javascript:call_fieldlookup2(document.${formName?html}.${name?html},'${fieldFormName}', '${presentation}'<#rt/>
+    <#if targetParameterIter?has_content>
+     <#list targetParameterIter as item>
+    ,document.${formName}.${item}.value<#rt>
+     </#list>
+    </#if>
+    );"></a><#rt>
 <#else>
- <a href="javascript:call_fieldlookupLayer(document.${formName?html}.${name?html},'${fieldFormName}','${width}','${height}','${position}','${fadeBackground}'<#rt/>
+ <#if ajaxEnabled?has_content && ajaxEnabled>
+      <#if parameters?has_content && parameters._LAST_VIEW_NAME_?has_content>
+        <#local ajaxUrl = ajaxUrl + "&amp;_LAST_VIEW_NAME_=" + parameters._LAST_VIEW_NAME_ />
+      <#else>
+        <#local ajaxUrl = ajaxUrl + "&amp;_LAST_VIEW_NAME_=main"/>
+      </#if>      
+      <#if !ajaxUrl?contains("searchValueFieldName=")>
+          <#if descriptionFieldName?has_content && showDescription == "true">
+            <#local ajaxUrl = ajaxUrl + "&amp;searchValueFieldName=" + descriptionFieldName />
+          <#else>
+            <#local ajaxUrl = ajaxUrl + "&amp;searchValueFieldName=" + name />
+          </#if>
+      </#if>
+    </#if>
+    <script type="text/javascript">
+        jQuery(document).ready(function(){
+            new ConstructLookup("${fieldFormName}", "${id}", document.${formName?html}.${name?html}, <#if descriptionFieldName?has_content>document.${formName?html}.${descriptionFieldName}<#else>null</#if>, "${formName?html}", "${width}", "${height}", "${position}", "${fadeBackground}", <#if ajaxEnabled?has_content && ajaxEnabled>"${ajaxUrl}", "${showDescription}"<#else>"", ""</#if>, '${presentation!}'<#rt/>
+    <#if targetParameterIter?has_content>
+      <#assign isFirst = true>
+      <#lt/>, [<#rt/>
+      <#list targetParameterIter as item>
+        <#if isFirst>
+          <#lt/>document.${formName}.${item}<#rt/>
+          <#assign isFirst = false>
+        <#else>
+          <#lt/> ,document.${formName}.${item}<#rt/>
+        </#if>
+      </#list>
+      <#lt/>]<#rt/>
+    </#if>
+            <#lt/>);
+        });
+    </script>
 </#if>
-<#if targetParameterIter?has_content>
- <#list targetParameterIter as item>
-,document.${formName}.${item}.value<#rt>
- </#list>
-</#if>
-);">
-<#if ajaxEnabled?has_content && ajaxEnabled><span id="${id}_indicator" style="display: none" class="indicator"><img src="/images/ajax-loader.gif" alt=""/></span></#if>
-</a><#rt>
 <#if readonly?has_content && readonly><a id="${id}_clear" style="background:none;margin-left:5px;margin-right:15px;" class="clearField" href="javascript:void();" onclick="javascript:document.${formName}.${name}.value='';<#if descriptionFieldName?has_content>document.${formName}.${descriptionFieldName}.value='';</#if>">${clearText}</a></#if>
 </span>
 <#if ajaxEnabled?has_content && ajaxEnabled>
-      <#if parameters?has_content && parameters._LAST_VIEW_NAME_?has_content>
+      <#if parameters?has_content && parameters._LAST_VIEW_NAME_?has_content && ajaxUrl?index_of("_LAST_VIEW_NAME_") < 0>
         <#local ajaxUrl = ajaxUrl + "&amp;_LAST_VIEW_NAME_=" + parameters._LAST_VIEW_NAME_ />
-      <#else>
+      <#elseif ajaxUrl?index_of("_LAST_VIEW_NAME_") < 0>
         <#local ajaxUrl = ajaxUrl + "&amp;_LAST_VIEW_NAME_=main"/>
       </#if>      
     <script language="JavaScript" type="text/javascript">ajaxAutoCompleter('${ajaxUrl}', ${showDescription});</script><#t/>
Index: framework/common/webcommon/includes/htmlTemplate.ftl
===================================================================
--- framework/common/webcommon/includes/htmlTemplate.ftl	(revision 1068853)
+++ framework/common/webcommon/includes/htmlTemplate.ftl	(working copy)
@@ -19,7 +19,7 @@
 
 <#include "component://widget/templates/htmlFormMacroLibrary.ftl"/>
 
-<#macro lookupField className="" alert="" name="" value="" size="20" maxlength="20" id="" event="" action="" disabled="" autocomplete="" descriptionFieldName="" formName="" fieldFormName="" targetParameterIter="" imgSrc="" ajaxUrl="" ajaxEnabled="" presentation="" width="20" height="20" position="topleft" fadeBackground="true" clearText="" showDescription="" initiallyCollapsed="">
+<#macro lookupField className="" alert="" name="" value="" size="20" maxlength="20" id="" event="" action="" disabled="" autocomplete="" descriptionFieldName="" formName="" fieldFormName="" targetParameterIter="" imgSrc="" ajaxUrl="" ajaxEnabled="" presentation="layer" width="" height="" position="topleft" fadeBackground="true" clearText="" showDescription="" initiallyCollapsed="">
     <#if (!ajaxEnabled?has_content)>
         <#assign javascriptEnabled = Static["org.ofbiz.base.util.UtilHttp"].isJavaScriptEnabled(request) />
         <#if (javascriptEnabled)>
@@ -31,7 +31,7 @@
     </#if>
     <#if (!ajaxUrl?has_content)>
         <#local ajaxUrl = requestAttributes._REQUEST_HANDLER_.makeLink(request, response, fieldFormName)/>
-        <#local ajaxUrl = id + "," + ajaxUrl + ",ajaxLookup=Y&amp;searchValueField=" + name />
+        <#local ajaxUrl = id + "," + ajaxUrl + ",ajaxLookup=Y" />
     </#if>
     <#if (!showDescription?has_content)>
         <#local showDescription = Static["org.ofbiz.base.util.UtilProperties"].getPropertyValue("widget.properties", "widget.lookup.showDescription", "N")>
@@ -46,7 +46,7 @@
         <#else>
             <#local disabled = false />
         </#if>    
-    <@renderLookupField className alert name value size maxlength id event action disabled autocomplete descriptionFieldName formName fieldFormName targetParameterIter imgSrc ajaxUrl ajaxEnabled presentation width height position fadeBackground clearText showDescription/>
+    <@renderLookupField className alert name value size maxlength id event action disabled autocomplete descriptionFieldName formName fieldFormName targetParameterIter imgSrc ajaxUrl ajaxEnabled presentation width height position fadeBackground clearText showDescription initiallyCollapsed/>
 </#macro>
 
 <#macro nextPrev commonUrl="" ajaxEnabled=false javaScriptEnabled=false paginateStyle="nav-pager" paginateFirstStyle="nav-first" viewIndex=0 highIndex=0 listSize=0 viewSize=1 ajaxFirstUrl="" firstUrl="" paginateFirstLabel="" paginatePreviousStyle="nav-previous" ajaxPreviousUrl="" previousUrl="" paginatePreviousLabel="" pageLabel="" ajaxSelectUrl="" selectUrl="" ajaxSelectSizeUrl="" selectSizeUrl="" commonDisplaying="" paginateNextStyle="nav-next" ajaxNextUrl="" nextUrl="" paginateNextLabel="" paginateLastStyle="nav-last" ajaxLastUrl="" lastUrl="" paginateLastLabel="" paginateViewSizeLabel="" >
@@ -55,27 +55,24 @@
         <#local javaScriptEnabled = Static["org.ofbiz.base.util.UtilHttp"].isJavaScriptEnabled(request) />
     </#if>
     <#if (commonUrl?has_content)>
-        <#if (!firstUr?has_content)>
+        <#if (!firstUrl?has_content)>
             <#local firstUrl=commonUrl+"VIEW_SIZE=${viewSize}&amp;VIEW_INDEX=${viewIndexFirst}"/>
         </#if>
         <#if (!previousUrl?has_content)>
              <#local previousUrl=commonUrl+"VIEW_SIZE=${viewSize}&amp;VIEW_INDEX=${viewIndexPrevious}"/>
         </#if>
-        <#if (!firstUr?has_content)>
+        <#if (!nextUrl?has_content)>
             <#local nextUrl=commonUrl+"VIEW_SIZE=${viewSize}&amp;VIEW_INDEX=${viewIndexNext}"/>
         </#if>
-        <#if (!firstUr?has_content)>
+        <#if (!lastUrl?has_content)>
             <#local lastUrl=commonUrl+"VIEW_SIZE=${viewSize}&amp;VIEW_INDEX=${viewIndexLast}"/>
         </#if>
-        <#if (!firstUr?has_content)>
+        <#if (!selectUrl?has_content)>
             <#local selectUrl=commonUrl+"VIEW_SIZE=${viewSize}&amp;VIEW_INDEX="/>
         </#if>
-        <#if (!firstUr?has_content)>
+        <#if (!selectSizeUrl?has_content)>
             <#local selectSizeUrl=commonUrl+"VIEW_SIZE='+this.value+'&amp;VIEW_INDEX=0"/>
         </#if>
     </#if>
-    <#if (!commonDisplaying?has_content)>
-        <#local commonDisplaying="${lowIndex} - ${highIndex} ${uiLabelMap.CommonOf} ${listSize}"/>    
-    </#if>
-    <@renderNextPrev paginateStyle paginateFirstStyle viewIndex highIndex listSize viewSize ajaxEnabled javaScriptEnabled ajaxFirstUrl firstUrl paginateFirstLabel paginatePreviousStyle ajaxPreviousUrl previousUrl paginatePreviousLabel pageLabel ajaxSelectUrl selectUrl ajaxSelectSizeUrl selectSizeUrl commonDisplaying paginateNextStyle ajaxNextUrl nextUrl paginateNextLabel paginateLastStyle ajaxLastUrl lastUrl paginateLastLabel paginateViewSizeLabel />
+    <@renderNextPrev paginateStyle paginateFirstStyle viewIndex highIndex listSize viewSize ajaxEnabled javaScriptEnabled ajaxFirstUrl firstUrl uiLabelMap.CommonFirst paginatePreviousStyle ajaxPreviousUrl previousUrl uiLabelMap.CommonPrevious uiLabelMap.CommonPage ajaxSelectUrl selectUrl ajaxSelectSizeUrl selectSizeUrl commonDisplaying paginateNextStyle ajaxNextUrl nextUrl uiLabelMap.CommonNext paginateLastStyle ajaxLastUrl lastUrl uiLabelMap.CommonLast uiLabelMap.CommonItemsPerPage/>
 </#macro>
\ No newline at end of file
